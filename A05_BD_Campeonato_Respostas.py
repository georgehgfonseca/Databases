# -*- coding: utf-8 -*-
"""A05_BD_Campeonato.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UzbxL0MMSQgdP9nJlBDgjXkbVdYw-8dY

# Importação e instalação de pacotes
"""

!pip install mysql
!pip install mysql-connector

import pandas as pd
import mysql.connector

"""# Conexão com o banco de dados (Google Cloud)"""

db= mysql.connector.connect(host="35.188.71.153",user="root", passwd="12345678",db="CAMPEONATO")
#db= mysql.connector.connect(host="35.239.50.225",user="root", passwd="12345678",db="campeonato")
cursor = db.cursor()

print("Conectado com sucesso!")

"""# Exibição dos metadados do BD"""

#Exibir as tabelas do banco de dados
print("BD CAMPEONATO") 
cursor.execute("show tables;");
for i in cursor:
    print(i)

print("\nTabela EQUIPE") 
cursor.execute("describe EQUIPE;");
for i in cursor:
    print(i)

print("\nTabela PARTIDA") 
cursor.execute("describe PARTIDA;");
for i in cursor:
    print(i)

print("\nTabela JOGADOR") 
cursor.execute("describe JOGADOR;");
for i in cursor:
    print(i)

print("\nTabela POSICAO") 
cursor.execute("describe POSICAO;");
for i in cursor:
    print(i)

print("\nTabela JOGA") 
cursor.execute("describe JOGA;");
for i in cursor:
    print(i)

"""# Consultas SQL simples"""

#Exibir os dados de todas as equipes
print("EQUIPES:") 
cursor.execute(
    """SELECT * 
       FROM EQUIPE;""");
for i in cursor:
    print(i)

#Exibir os dados dos jogadores da equipe 'America F. C.'
print("\nJOGADORES do America F. C.:") 
cursor.execute(
    """SELECT J.CPF, J.Nome, J.DataNascimento, J.Salario
       FROM   EQUIPE AS E, JOGADOR AS J
       WHERE   J.ECodigo = E.Codigo AND E.Nome = "America F. C.";""");
for i in cursor:
    print(i)

"""# Consultas SQL simples com Pandas"""

#Exibir os dados de todas as equipes com Pandas
print("EQUIPES:") 
SQL_Query = pd.read_sql_query(
    """SELECT * 
       FROM EQUIPE;""", db)
df = pd.DataFrame(SQL_Query, columns=['Codigo','Nome'])
print(df)

#Exibir os dados dos jogadores da equipe 'America F. C.'
print("\nJOGADORES do America F. C.:") 
SQL_Query = pd.read_sql_query(
    """SELECT J.CPF, J.Nome, J.DataNascimento, J.Salario
       FROM   EQUIPE AS E, JOGADOR AS J
       WHERE   J.ECodigo = E.Codigo AND E.Nome = "America F. C.";""", db);
df = pd.DataFrame(SQL_Query)
print(df)

"""# Operações com Pandas DataFrame"""

#Imprime o nome do jogador da posição 0 (via nome da coluna)
print(df.loc[0,'Nome'])

#Imprime o nome do jogador da posição 0 (via índice da coluna)
print(df.iloc[0,1])

#Alterando o salário do jogador da posição 0 para 100.000
df.loc[0,'Salario'] = 100000.00

#Converte DataFrame para list (matriz)
matriz = df.values.tolist()
print(matriz)

#Converte list (matriz) para DataFrame
df = pd.DataFrame(matriz,columns=['CPF', 'Nome', 'DataNascimento', 'Salario'])
print(df)

#Cria arquivo .csv a partir de um DataFrame
df.to_csv(r'Jogadores_America.csv', index = False)

"""# Consultas SQL dos exercícios

1. Adicionar a equipe 'Porto F. C.', de código 1053 à tabela EQUIPE com 0 vitórias, 0 derrotas e 0 empates.
"""

cursor.execute(
    """DELETE FROM EQUIPE
       WHERE Codigo=1053;""");

cursor.execute(
    """INSERT INTO EQUIPE VALUES
       ("Porto F. C.", 1053, 0, 0, 0);""");

"""2. Adicionar a posição 'Lateral direito' ao jogador de CPF '1098068753'."""

# A fazer
cursor.execute(
    """DELETE FROM POSICAO
       WHERE JCPF=1098068753 AND Posicao="Lateral direito";""");

cursor.execute(
    """INSERT INTO POSICAO VALUES
       ("Lateral direito", 1098068753);""");

"""3. Exibir o código, o nome e o número de vitórias dos times com mais que 5 vitórias."""

# A fazer
cursor.execute(
    """SELECT  E.Codigo, E.Nome, E.Vitorias
       FROM    EQUIPE AS E
       WHERE   E.Vitorias > 5;""");

for i in cursor:
    print(i)

"""4. Recuperar os jogadores nascidos na década de 90."""

# A fazer
cursor.execute(
    """SELECT  J.CPF
       FROM    JOGADOR AS J
       WHERE   J.DataNascimento LIKE "199_______";""");

for i in cursor:
    print(i)

"""5. Recuperar o nome dos jogadores que atuam pela equipe 'Real F. C.'"""

# A fazer
cursor.execute(
    """SELECT  J.Nome
       FROM    JOGADOR AS J, EQUIPE AS E
       WHERE   J.ECodigo = E.Codigo AND E.Nome = 'Real F. C.';""");

for i in cursor:
    print(i)

"""6. Recuperar o nome e o CPF de todos os jogadores que atuam na posição 'Goleiro'."""

# A fazer
cursor.execute(
    """SELECT  J.Nome, J.CPF
       FROM    JOGADOR AS J, POSICAO AS P
      WHERE    J.CPF = P.JCPF AND P.Posicao LIKE '%Goleiro%';""");

for i in cursor:
    print(i)

"""7. Recuperar os dados do jogador que mais fez gols no campeonato (artilheiro)."""

# A fazer
cursor.execute("""
SELECT    J.CPF, J.Nome, SUM(JG.Gols) AS Gols
FROM      JOGADOR AS J, JOGA AS JG
WHERE     J.CPF=JG.JCPF
GROUP BY  J.CPF, J.Nome
ORDER BY  Gols DESC
LIMIT     1;""");

for i in cursor:
    print(i)

"""8. Recuperar os times ordenados decrescentemente pelo número de vitórias, e pelo número de empates caso o número de vitórias seja igual."""

# A fazer
cursor.execute("""
SELECT    E.Nome, E.Vitorias
FROM      EQUIPE AS E
ORDER BY  E.Vitorias DESC, E.Empates DESC;""");

for i in cursor:
    print(i)

"""9. Recuperar o número de gols marcados e o número de gols sofridos pela equipe 'Sport F. C.'."""

print("Gols marcados")
cursor.execute("""
(SELECT   E.Nome, SUM(MGols)
FROM      EQUIPE AS E, PARTIDA AS P
WHERE     E.Codigo=MECodigo AND E.Nome LIKE "%Sport%"
GROUP BY  E.Nome)
UNION
(SELECT   E.Nome, SUM(VGols)
FROM      EQUIPE AS E, PARTIDA AS P
WHERE     E.Codigo=VECodigo AND E.Nome LIKE "%Sport%"
GROUP BY  E.Nome);""");

for i in cursor:
    print(i)

print("Gols sofridos")
cursor.execute("""
(SELECT   E.Nome, SUM(VGols)
FROM      EQUIPE AS E, PARTIDA AS P
WHERE     E.Codigo=MECodigo AND E.Nome LIKE "%Sport%"
GROUP BY  E.Nome)
UNION
(SELECT   E.Nome, SUM(MGols)
FROM      EQUIPE AS E, PARTIDA AS P
WHERE     E.Codigo=VECodigo AND E.Nome LIKE "%Sport%"
GROUP BY  E.Nome);""");

for i in cursor:
    print(i)

"""10. Recuperar a equipe que tem o maior número de derrotas."""

cursor.execute("""
SELECT    E.Nome, E.Derrotas
FROM      EQUIPE AS E
ORDER BY  E.Derrotas DESC
LIMIT     1;""");

for i in cursor:
    print(i)

"""11. Recuperar a média dos salários dos jogadores da equipe 'River F. C.'"""

cursor.execute("""
SELECT   E.Nome, AVG(J.Salario)
FROM     EQUIPE AS E, JOGADOR AS J
WHERE    E.Codigo=J.ECodigo AND E.Nome LIKE "%River%"
GROUP BY E.Nome;""");

for i in cursor:
    print(i)

"""12. Recuperar o nome dos jogadores que atuaram pela equipe 'America F. C.' na rodada número 3."""

cursor.execute("""
SELECT  J.Nome, P.Codigo, E.Nome
FROM    JOGADOR AS J, EQUIPE AS E, JOGA AS JG, PARTIDA AS P
WHERE   J.CPF=JG.JCPF AND 
        P.Codigo=JG.PCodigo AND 
        E.Codigo=J.ECodigo AND 
        E.Nome LIKE "%America%" AND 
        P.Rodada = 3;""");

for i in cursor:
    print(i)

"""13. Recuperar o nome das equipes que venceram na rodada 7."""

cursor.execute("""
SELECT   E.Nome
FROM     EQUIPE AS E, PARTIDA AS P
WHERE    ((P.MECodigo = E.Codigo AND P.MGols > P.VGols) OR (P.VECodigo = E.Codigo AND P.VGols > P.MGols)) AND P.Rodada = 7;""");

for i in cursor:
    print(i)

"""14. Recuperar as equipes ordenadas decrescentemente pela média do público dos jogos em que foi mandante."""

cursor.execute(
    """SELECT   E.Nome, AVG(P.Publico)
       FROM     EQUIPE AS E, PARTIDA AS P
       WHERE    P.MECodigo = E.Codigo
       GROUP BY E.Nome
       ORDER BY AVG(P.Publico) DESC;""");

for i in cursor:
    print(i)

"""15. Recuperar o número de cartões obtidos pela equipe 'Real F. C.' durante o campeonato."""

cursor.execute(
    """SELECT  E.Nome, SUM(JG.CartoesAmarelos) + SUM(JG.CartaoVermelho) 
     FROM      EQUIPE AS E, PARTIDA AS P, JOGADOR AS J, JOGA AS JG
     WHERE     (E.Codigo=P.MECodigo OR E.Codigo=P.VECodigo) AND
                J.ECodigo=E.Codigo AND
                J.CPF=JG.JCPF AND JG.PCodigo=P.Codigo AND
                E.Nome='Real F. C.';""");

for i in cursor:
    print(i)

"""16. Recuperar as equipes ordenadas decrescentemente pela média salarial de seus jogadores."""

cursor.execute("""
SELECT    E.Nome, ROUND(AVG(J.Salario), 2) 
FROM      EQUIPE AS E, JOGADOR AS J
WHERE     J.ECodigo=E.Codigo
GROUP BY  E.Nome
ORDER BY  AVG(J.Salario) DESC;""");

for i in cursor:
    print(i)

"""17. Recuperar a equipe que mais perdeu como mandante."""

cursor.execute("""
SELECT    E.Nome, COUNT(*) 
FROM      EQUIPE AS E, PARTIDA AS P
WHERE     E.Codigo=P.MECodigo AND P.MGols < P.VGols
GROUP BY  E.Nome
ORDER BY  COUNT(*) DESC
LIMIT     1;""");

for i in cursor:
    print(i)

"""18. Atualizar o número de vitórias da equipe 'Porto F. C.' para 1."""

cursor.execute(
    """UPDATE    EQUIPE
       SET       Vitorias=Vitorias+1
       WHERE     Nome='Porto F. C.';""");

"""19. Atualizar o número de gols marcados pelo jogador de CPF '1493017907' na partida código '181' para 2."""

cursor.execute(
    """UPDATE    JOGA
       SET       Gols=2
       WHERE     JCPF = 1493017907 AND PCodigo = 181;""");

"""20. (DESAFIO) Recuperar o nome da equipe que mais perdeu para a equipe 'Independente F. C.' e o número de derrotas registradas."""

cursor.execute("""
SELECT    E.Nome, COUNT(*) 
FROM      EQUIPE AS E, PARTIDA AS P, EQUIPE AS E2
WHERE     (E.Codigo=P.MECodigo AND P.MGols < P.VGols AND P.VECodigo=E2.Codigo AND E2.Nome='Independente F. C.')
          OR
          (E.Codigo=P.VECodigo AND P.VGols < P.MGols AND P.MECodigo=E2.Codigo AND E2.Nome='Independente F. C.')
GROUP BY  E.Nome
ORDER BY  COUNT(*) DESC
LIMIT     1;""");

for i in cursor:
    print(i)

"""21. (DESAFIO) Calcular a pontuação de cada equipe (3 pontos para cada vitória e 1 para cada empate) sem usar os atributos Vitorias, Empates e Derrotas e exibir as equipes em ordem decrescente de pontuação, junto a seu número de vitórias, empates e derrotas."""

cursor.execute("""
SELECT E.Nome,
    (SELECT COUNT(*) FROM EQUIPE AS E2, PARTIDA AS P WHERE (((E2.Codigo=P.MECodigo AND P.MGols > P.VGols) OR (E2.Codigo=P.VECodigo AND P.VGols > P.MGols)) AND E2.Nome = E.Nome)) as Vitorias,
    (SELECT COUNT(*) FROM EQUIPE AS E2, PARTIDA AS P WHERE (((E2.Codigo=P.MECodigo AND P.MGols = P.VGols) OR (E2.Codigo=P.VECodigo AND P.VGols = P.MGols)) AND E2.Nome = E.Nome)) as Empates,
    (SELECT COUNT(*) FROM EQUIPE AS E2, PARTIDA AS P WHERE (((E2.Codigo=P.MECodigo AND P.MGols < P.VGols) OR (E2.Codigo=P.VECodigo AND P.VGols < P.MGols)) AND E2.Nome = E.Nome)) as Derrotas,
    (SELECT COUNT(*) * 3 FROM EQUIPE AS E2, PARTIDA AS P WHERE (((E2.Codigo=P.MECodigo AND P.MGols > P.VGols) OR (E2.Codigo=P.VECodigo AND P.VGols > P.MGols)) AND E2.Nome = E.Nome)) +
    (SELECT COUNT(*) FROM EQUIPE AS E2, PARTIDA AS P WHERE (((E2.Codigo=P.MECodigo AND P.MGols = P.VGols) OR (E2.Codigo=P.VECodigo AND P.VGols = P.MGols)) AND E2.Nome = E.Nome)) as Pontos
FROM (SELECT Nome FROM EQUIPE) AS E
ORDER BY Pontos DESC, Vitorias DESC;""", db);

for i in cursor:
    print(i)

"""# Manipulação de Arquivos .csv

1. Leitura de dados .csv
"""

#Lê dados de um arquivo .csv local
df = pd.read_csv("Jogadores_America.csv")

#Lê dados de um arquivo .csv da Web
df = pd.read_csv("http://professor.ufop.br/sites/default/files/george/files/jogadores_america.csv")
print("Jogadores:")
print(df)

"""2. Adição de coluna a um DataFrame"""

#Adiciona a coluna Status ao DataFrame df
status = ["Disponivel",
          "Lesionado",
          "Disponivel",
          "Disponivel",
          "Suspenso",
          "Disponivel",
          "Disponivel",
          "Disponivel",
          "Disponivel",
          "Lesionado",
          "Disponivel",
          "Disponivel",
          "Suspenso",
          "Disponivel",
          "Disponivel",
          "Disponivel"]
df["Status"] = status
print("\nJogadores com Status:")
print(df)

"""3. Imprime apenas a coluna "Salario" do DataFrame"""

print(df["Salario"])

"""4. Escreve os dados alterados em Jogadores_America_Update.csv"""

df.to_csv(r'Jogadores_America_Update.csv', index = False)